name: release

on:
  push:
    branches: [ main ]

env:
  latest: ubuntu-20.04
  windows: windows

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-22.04, ubuntu-20.04 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: make
      - name: Save latest
        if: env.latest == matrix.os
        run: |
          cp -a helloworld helloworld-latest
      - name: Rename
        run: |
          ls -lR
          mv helloworld helloworld-${{ matrix.os }}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: Latest Release
          tag_name: latest
          files: |
            helloworld-*
  build-go:
    strategy:
      matrix:
        goos: [ linux, windows ]
        goarch: [ amd64, arm64 ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Show go version
        run: go version
      - name: Build
        run: GOOS=${{ matrix.goos}} GOARCH=${{ matrix.goarch }} go build -o go-helloworld-${{ matrix.goos }}-${{ matrix.goarch }}
        working-directory: ./go
      - name: Rename Windows exe
        if: env.windows == matrix.goos
        run: mv go-helloworld-windows-${{ matrix.goarch }} go-helloworld-windows-${{ matrix.goarch }}.exe
        working-directory: ./go
      - name: Show files
        run: ls -lR
        working-directory: ./go
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: Latest Release
          tag_name: latest
          files: |
            go/go-helloworld-*
